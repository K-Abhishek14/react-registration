{"version":3,"sources":["components/home/listItems.js","components/home/Dashboard.js"],"names":["mainListItems","ListItem","button","ListItemIcon","ListItemText","primary","secondaryListItems","ListSubheader","inset","Dashboard","props","handleClick","e","setState","anchorEl","currentTarget","handleClose","history","push","handleDrawerOpen","open","handleDrawerClose","state","classes","this","className","root","CssBaseline","AppBar","position","clsx","appBar","appBarShift","Toolbar","toolbar","IconButton","edge","color","aria-label","onClick","menuButton","menuButtonHidden","Typography","component","variant","noWrap","title","Badge","badgeContent","aria-haspopup","id","keepMounted","Boolean","onClose","MenuItem","bind","Drawer","paper","drawerPaper","drawerPaperClose","toolbarIcon","Divider","List","content","appBarSpacer","Container","maxWidth","container","Grid","spacing","item","xs","md","lg","Paper","Component","withStyles","theme","display","paddingRight","alignItems","justifyContent","padding","mixins","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","width","enteringScreen","marginRight","flexGrow","whiteSpace","overflowX","breakpoints","up","height","overflow","paddingTop","paddingBottom","flexDirection","fixedHeight","withTheme"],"mappings":"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","file":"static/js/7.07eb9d74.chunk.js","sourcesContent":["import React from 'react';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport BarChartIcon from '@material-ui/icons/BarChart';\r\nimport LayersIcon from '@material-ui/icons/Layers';\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\n\r\nexport const mainListItems = (\r\n  <div>\r\n    <ListItem button>\r\n      <ListItemIcon>\r\n        <DashboardIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Dashboard\" />\r\n    </ListItem>\r\n    <ListItem button>\r\n      <ListItemIcon>\r\n        <ShoppingCartIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Orders\" />\r\n    </ListItem>\r\n    <ListItem button>\r\n      <ListItemIcon>\r\n        <PeopleIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Customers\" />\r\n    </ListItem>\r\n    <ListItem button>\r\n      <ListItemIcon>\r\n        <BarChartIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Reports\" />\r\n    </ListItem>\r\n    <ListItem button>\r\n      <ListItemIcon>\r\n        <LayersIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Integrations\" />\r\n    </ListItem>\r\n  </div>\r\n);\r\n\r\nexport const secondaryListItems = (\r\n  <div>\r\n    <ListSubheader inset>Saved reports</ListSubheader>\r\n    <ListItem button>\r\n      <ListItemIcon>\r\n        <AssignmentIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Current month\" />\r\n    </ListItem>\r\n    <ListItem button>\r\n      <ListItemIcon>\r\n        <AssignmentIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Last quarter\" />\r\n    </ListItem>\r\n    <ListItem button>\r\n      <ListItemIcon>\r\n        <AssignmentIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Year-end sale\" />\r\n    </ListItem>\r\n  </div>\r\n);","import React, { Component } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport { mainListItems, secondaryListItems } from './listItems';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n});\r\n\r\n\r\nclass Dashboard extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      open: true,\r\n      anchorEl: null,\r\n    }\r\n  }\r\n\r\n  handleClick = (e) => {\r\n    this.setState({ anchorEl: e.currentTarget });\r\n  }\r\n\r\n  handleClose = (e) => {\r\n    this.setState({ anchorEl: null });\r\n    this.props.history.push('/login');\r\n  }\r\n\r\n\r\n  handleDrawerOpen = () => {\r\n    this.setState({ open: true })\r\n  };\r\n  handleDrawerClose = () => {\r\n    this.setState({ open: false })\r\n  };\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { open, anchorEl } = this.state;\r\n    return (\r\n      <div className={classes.root}>\r\n        <CssBaseline />\r\n        <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n          <Toolbar className={classes.toolbar}>\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              aria-label=\"open drawer\"\r\n              onClick={this.handleDrawerOpen}\r\n              className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n              Dashboard\r\n          </Typography>\r\n            <IconButton color=\"inherit\">\r\n              <Badge badgeContent={4} color=\"secondary\">\r\n                <NotificationsIcon />\r\n              </Badge>\r\n            </IconButton>\r\n            <IconButton\r\n              edge=\"end\"\r\n              aria-label=\"account of current user\"\r\n              aria-haspopup=\"true\"\r\n              color=\"inherit\"\r\n              onClick={this.handleClick}\r\n            >\r\n              <AccountCircle />\r\n            </IconButton>\r\n            <Menu\r\n              id=\"simple-menu\"\r\n              anchorEl={anchorEl}\r\n              keepMounted\r\n              open={Boolean(anchorEl)}\r\n              onClose={this.handleClose}\r\n            >\r\n              <MenuItem onClick={this.handleClose}>My account</MenuItem>\r\n              <MenuItem onClick={this.handleClose.bind(this)}>Logout</MenuItem>\r\n            </Menu>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Drawer\r\n          variant=\"permanent\"\r\n          classes={{\r\n            paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n          }}\r\n          open={open}\r\n        >\r\n          <div className={classes.toolbarIcon}>\r\n            <IconButton onClick={this.handleDrawerClose}>\r\n              <ChevronLeftIcon />\r\n            </IconButton>\r\n          </div>\r\n          <Divider />\r\n          <List>{mainListItems}</List>\r\n          <Divider />\r\n          <List>{secondaryListItems}</List>\r\n        </Drawer>\r\n        <main className={classes.content}>\r\n          <div className={classes.appBarSpacer} />\r\n          <Container maxWidth=\"lg\" className={classes.container}>\r\n            <Grid container spacing={3}>\r\n\r\n              <Grid item xs={12} md={8} lg={9}>\r\n                <Paper  >\r\n                  <h1>Chart</h1>\r\n\r\n                </Paper>\r\n              </Grid>\r\n\r\n              <Grid item xs={12} md={4} lg={3}>\r\n                <Paper  >\r\n                  <h1>Deposits</h1>\r\n\r\n                </Paper>\r\n              </Grid>\r\n\r\n              <Grid item xs={12}>\r\n                <Paper className={classes.paper}>\r\n                  <h1>Orders</h1>\r\n\r\n                </Paper>\r\n              </Grid>\r\n            </Grid>\r\n\r\n          </Container>\r\n        </main>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Dashboard = withStyles(styles, { withTheme: true })(Dashboard)\r\n"],"sourceRoot":""}